digraph {
	compound = "true"
	newrank = "true"
	subgraph "root" {
		"[root] module.auto_scaling.aws_autoscaling_group.auto_scaling_group (expand)" [label = "module.auto_scaling.aws_autoscaling_group.auto_scaling_group", shape = "box"]
		"[root] module.auto_scaling.aws_autoscaling_policy.auto_scaling_policy (expand)" [label = "module.auto_scaling.aws_autoscaling_policy.auto_scaling_policy", shape = "box"]
		"[root] module.cloudwatch.aws_cloudwatch_log_group.vpc_flow_logs (expand)" [label = "module.cloudwatch.aws_cloudwatch_log_group.vpc_flow_logs", shape = "box"]
		"[root] module.cloudwatch.aws_cloudwatch_metric_alarm.auto_scaling_alarm (expand)" [label = "module.cloudwatch.aws_cloudwatch_metric_alarm.auto_scaling_alarm", shape = "box"]
		"[root] module.elb.aws_lb.web_elb (expand)" [label = "module.elb.aws_lb.web_elb", shape = "box"]
		"[root] module.elb.aws_lb_listener.elb-listener (expand)" [label = "module.elb.aws_lb_listener.elb-listener", shape = "box"]
		"[root] module.elb.aws_lb_target_group.target_group (expand)" [label = "module.elb.aws_lb_target_group.target_group", shape = "box"]
		"[root] module.flow_log.aws_flow_log.main (expand)" [label = "module.flow_log.aws_flow_log.main", shape = "box"]
		"[root] module.iam.aws_iam_policy.flow_logs_cloudwatch_policy (expand)" [label = "module.iam.aws_iam_policy.flow_logs_cloudwatch_policy", shape = "box"]
		"[root] module.iam.aws_iam_role.flow_logs_cloudwatch_role (expand)" [label = "module.iam.aws_iam_role.flow_logs_cloudwatch_role", shape = "box"]
		"[root] module.iam.aws_iam_role_policy_attachment.flow_logs_assume (expand)" [label = "module.iam.aws_iam_role_policy_attachment.flow_logs_assume", shape = "box"]
		"[root] module.internet_gateway.aws_internet_gateway.internet_gateway (expand)" [label = "module.internet_gateway.aws_internet_gateway.internet_gateway", shape = "box"]
		"[root] module.kms.aws_kms_key.cloudwatch_key (expand)" [label = "module.kms.aws_kms_key.cloudwatch_key", shape = "box"]
		"[root] module.kms.data.aws_caller_identity.current (expand)" [label = "module.kms.data.aws_caller_identity.current", shape = "box"]
		"[root] module.launch_configuration.aws_launch_configuration.launch_configuration (expand)" [label = "module.launch_configuration.aws_launch_configuration.launch_configuration", shape = "box"]
		"[root] module.nat_gateway.aws_eip.nat_gw_eip_0 (expand)" [label = "module.nat_gateway.aws_eip.nat_gw_eip_0", shape = "box"]
		"[root] module.nat_gateway.aws_eip.nat_gw_eip_1 (expand)" [label = "module.nat_gateway.aws_eip.nat_gw_eip_1", shape = "box"]
		"[root] module.nat_gateway.aws_nat_gateway.nat_gw_0 (expand)" [label = "module.nat_gateway.aws_nat_gateway.nat_gw_0", shape = "box"]
		"[root] module.nat_gateway.aws_nat_gateway.nat_gw_1 (expand)" [label = "module.nat_gateway.aws_nat_gateway.nat_gw_1", shape = "box"]
		"[root] module.route_table.aws_route_table.internet_gateway_rt_0 (expand)" [label = "module.route_table.aws_route_table.internet_gateway_rt_0", shape = "box"]
		"[root] module.route_table.aws_route_table.nat_gateway_rt_0 (expand)" [label = "module.route_table.aws_route_table.nat_gateway_rt_0", shape = "box"]
		"[root] module.route_table.aws_route_table.nat_gateway_rt_1 (expand)" [label = "module.route_table.aws_route_table.nat_gateway_rt_1", shape = "box"]
		"[root] module.route_table.aws_route_table_association.internet_gateway_rta_0 (expand)" [label = "module.route_table.aws_route_table_association.internet_gateway_rta_0", shape = "box"]
		"[root] module.route_table.aws_route_table_association.internet_gateway_rta_1 (expand)" [label = "module.route_table.aws_route_table_association.internet_gateway_rta_1", shape = "box"]
		"[root] module.route_table.aws_route_table_association.internet_gateway_rta_2 (expand)" [label = "module.route_table.aws_route_table_association.internet_gateway_rta_2", shape = "box"]
		"[root] module.route_table.aws_route_table_association.nat-gateway-pub-0 (expand)" [label = "module.route_table.aws_route_table_association.nat-gateway-pub-0", shape = "box"]
		"[root] module.route_table.aws_route_table_association.nat-gateway-pub-1 (expand)" [label = "module.route_table.aws_route_table_association.nat-gateway-pub-1", shape = "box"]
		"[root] module.route_table.aws_route_table_association.nat-gateway-pub-2 (expand)" [label = "module.route_table.aws_route_table_association.nat-gateway-pub-2", shape = "box"]
		"[root] module.security_group.aws_security_group.ec2 (expand)" [label = "module.security_group.aws_security_group.ec2", shape = "box"]
		"[root] module.security_group.aws_security_group.elb (expand)" [label = "module.security_group.aws_security_group.elb", shape = "box"]
		"[root] module.security_group.aws_security_group_rule.ec2-https-egress (expand)" [label = "module.security_group.aws_security_group_rule.ec2-https-egress", shape = "box"]
		"[root] module.subnet.aws_subnet.private_0 (expand)" [label = "module.subnet.aws_subnet.private_0", shape = "box"]
		"[root] module.subnet.aws_subnet.private_1 (expand)" [label = "module.subnet.aws_subnet.private_1", shape = "box"]
		"[root] module.subnet.aws_subnet.private_2 (expand)" [label = "module.subnet.aws_subnet.private_2", shape = "box"]
		"[root] module.subnet.aws_subnet.public_0 (expand)" [label = "module.subnet.aws_subnet.public_0", shape = "box"]
		"[root] module.subnet.aws_subnet.public_1 (expand)" [label = "module.subnet.aws_subnet.public_1", shape = "box"]
		"[root] module.subnet.aws_subnet.public_2 (expand)" [label = "module.subnet.aws_subnet.public_2", shape = "box"]
		"[root] module.vpc.aws_vpc.vpc (expand)" [label = "module.vpc.aws_vpc.vpc", shape = "box"]
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"]" [label = "provider[\"registry.terraform.io/hashicorp/aws\"]", shape = "diamond"]
		"[root] var.auto_scaling_adjustment" [label = "var.auto_scaling_adjustment", shape = "note"]
		"[root] var.auto_scaling_adjustment_type" [label = "var.auto_scaling_adjustment_type", shape = "note"]
		"[root] var.auto_scaling_group_force_delete" [label = "var.auto_scaling_group_force_delete", shape = "note"]
		"[root] var.auto_scaling_group_health_check_grace" [label = "var.auto_scaling_group_health_check_grace", shape = "note"]
		"[root] var.auto_scaling_group_health_check_type" [label = "var.auto_scaling_group_health_check_type", shape = "note"]
		"[root] var.auto_scaling_group_max_size" [label = "var.auto_scaling_group_max_size", shape = "note"]
		"[root] var.auto_scaling_group_min_size" [label = "var.auto_scaling_group_min_size", shape = "note"]
		"[root] var.auto_scaling_group_name" [label = "var.auto_scaling_group_name", shape = "note"]
		"[root] var.auto_scaling_group_termination_policies" [label = "var.auto_scaling_group_termination_policies", shape = "note"]
		"[root] var.auto_scaling_policy_name" [label = "var.auto_scaling_policy_name", shape = "note"]
		"[root] var.aws_region_001" [label = "var.aws_region_001", shape = "note"]
		"[root] var.cloudwatch_alarm_comparison" [label = "var.cloudwatch_alarm_comparison", shape = "note"]
		"[root] var.cloudwatch_alarm_name" [label = "var.cloudwatch_alarm_name", shape = "note"]
		"[root] var.cloudwatch_alarm_period" [label = "var.cloudwatch_alarm_period", shape = "note"]
		"[root] var.cloudwatch_alarm_statistic" [label = "var.cloudwatch_alarm_statistic", shape = "note"]
		"[root] var.cloudwatch_alarm_threshold" [label = "var.cloudwatch_alarm_threshold", shape = "note"]
		"[root] var.cloudwatch_evaluation_periods" [label = "var.cloudwatch_evaluation_periods", shape = "note"]
		"[root] var.cloudwatch_log_group_name" [label = "var.cloudwatch_log_group_name", shape = "note"]
		"[root] var.cloudwatch_log_group_retention" [label = "var.cloudwatch_log_group_retention", shape = "note"]
		"[root] var.cloudwatch_metric_name" [label = "var.cloudwatch_metric_name", shape = "note"]
		"[root] var.cloudwatch_namespace" [label = "var.cloudwatch_namespace", shape = "note"]
		"[root] var.elb_name" [label = "var.elb_name", shape = "note"]
		"[root] var.elb_target_group_name" [label = "var.elb_target_group_name", shape = "note"]
		"[root] var.elb_type" [label = "var.elb_type", shape = "note"]
		"[root] var.enable_deletion_protection" [label = "var.enable_deletion_protection", shape = "note"]
		"[root] var.enable_dns_hostnames" [label = "var.enable_dns_hostnames", shape = "note"]
		"[root] var.enable_dns_support" [label = "var.enable_dns_support", shape = "note"]
		"[root] var.flow_logs_name" [label = "var.flow_logs_name", shape = "note"]
		"[root] var.health_check_enabled" [label = "var.health_check_enabled", shape = "note"]
		"[root] var.health_check_interval" [label = "var.health_check_interval", shape = "note"]
		"[root] var.health_check_matcher" [label = "var.health_check_matcher", shape = "note"]
		"[root] var.health_check_path" [label = "var.health_check_path", shape = "note"]
		"[root] var.health_check_port" [label = "var.health_check_port", shape = "note"]
		"[root] var.health_check_protocol" [label = "var.health_check_protocol", shape = "note"]
		"[root] var.health_check_timeout" [label = "var.health_check_timeout", shape = "note"]
		"[root] var.http_protocol" [label = "var.http_protocol", shape = "note"]
		"[root] var.iam_flow_logs_assume_role" [label = "var.iam_flow_logs_assume_role", shape = "note"]
		"[root] var.iam_flow_logs_policy" [label = "var.iam_flow_logs_policy", shape = "note"]
		"[root] var.internet_cidr" [label = "var.internet_cidr", shape = "note"]
		"[root] var.internet_gateway_name" [label = "var.internet_gateway_name", shape = "note"]
		"[root] var.kms_deletion_window_in_days" [label = "var.kms_deletion_window_in_days", shape = "note"]
		"[root] var.kms_description" [label = "var.kms_description", shape = "note"]
		"[root] var.kms_enable_key_rotation" [label = "var.kms_enable_key_rotation", shape = "note"]
		"[root] var.launch_configuration_image_id" [label = "var.launch_configuration_image_id", shape = "note"]
		"[root] var.launch_configuration_instance_type" [label = "var.launch_configuration_instance_type", shape = "note"]
		"[root] var.launch_configuration_key_name" [label = "var.launch_configuration_key_name", shape = "note"]
		"[root] var.launch_configuration_monitoring" [label = "var.launch_configuration_monitoring", shape = "note"]
		"[root] var.launch_configuration_name" [label = "var.launch_configuration_name", shape = "note"]
		"[root] var.launch_configuration_public_ip_address" [label = "var.launch_configuration_public_ip_address", shape = "note"]
		"[root] var.map_public_ip_on_launch" [label = "var.map_public_ip_on_launch", shape = "note"]
		"[root] var.nat_gw_name_000" [label = "var.nat_gw_name_000", shape = "note"]
		"[root] var.nat_gw_name_001" [label = "var.nat_gw_name_001", shape = "note"]
		"[root] var.port_http" [label = "var.port_http", shape = "note"]
		"[root] var.port_https" [label = "var.port_https", shape = "note"]
		"[root] var.port_ssh" [label = "var.port_ssh", shape = "note"]
		"[root] var.sg_description_000" [label = "var.sg_description_000", shape = "note"]
		"[root] var.sg_description_001" [label = "var.sg_description_001", shape = "note"]
		"[root] var.sg_description_002" [label = "var.sg_description_002", shape = "note"]
		"[root] var.sg_egress" [label = "var.sg_egress", shape = "note"]
		"[root] var.sg_ingress" [label = "var.sg_ingress", shape = "note"]
		"[root] var.sg_name_000" [label = "var.sg_name_000", shape = "note"]
		"[root] var.sg_name_001" [label = "var.sg_name_001", shape = "note"]
		"[root] var.sg_name_002" [label = "var.sg_name_002", shape = "note"]
		"[root] var.standard_tags" [label = "var.standard_tags", shape = "note"]
		"[root] var.sts_duration" [label = "var.sts_duration", shape = "note"]
		"[root] var.subnet_prv_0_az" [label = "var.subnet_prv_0_az", shape = "note"]
		"[root] var.subnet_prv_0_cidr" [label = "var.subnet_prv_0_cidr", shape = "note"]
		"[root] var.subnet_prv_0_name" [label = "var.subnet_prv_0_name", shape = "note"]
		"[root] var.subnet_prv_1_az" [label = "var.subnet_prv_1_az", shape = "note"]
		"[root] var.subnet_prv_1_cidr" [label = "var.subnet_prv_1_cidr", shape = "note"]
		"[root] var.subnet_prv_1_name" [label = "var.subnet_prv_1_name", shape = "note"]
		"[root] var.subnet_prv_2_az" [label = "var.subnet_prv_2_az", shape = "note"]
		"[root] var.subnet_prv_2_cidr" [label = "var.subnet_prv_2_cidr", shape = "note"]
		"[root] var.subnet_prv_2_name" [label = "var.subnet_prv_2_name", shape = "note"]
		"[root] var.subnet_pub_0_az" [label = "var.subnet_pub_0_az", shape = "note"]
		"[root] var.subnet_pub_0_cidr" [label = "var.subnet_pub_0_cidr", shape = "note"]
		"[root] var.subnet_pub_0_name" [label = "var.subnet_pub_0_name", shape = "note"]
		"[root] var.subnet_pub_1_az" [label = "var.subnet_pub_1_az", shape = "note"]
		"[root] var.subnet_pub_1_cidr" [label = "var.subnet_pub_1_cidr", shape = "note"]
		"[root] var.subnet_pub_1_name" [label = "var.subnet_pub_1_name", shape = "note"]
		"[root] var.subnet_pub_2_az" [label = "var.subnet_pub_2_az", shape = "note"]
		"[root] var.subnet_pub_2_cidr" [label = "var.subnet_pub_2_cidr", shape = "note"]
		"[root] var.subnet_pub_2_name" [label = "var.subnet_pub_2_name", shape = "note"]
		"[root] var.tcp_protocol" [label = "var.tcp_protocol", shape = "note"]
		"[root] var.traffic_type" [label = "var.traffic_type", shape = "note"]
		"[root] var.vpc_cidr" [label = "var.vpc_cidr", shape = "note"]
		"[root] var.vpc_enabled" [label = "var.vpc_enabled", shape = "note"]
		"[root] var.vpc_name" [label = "var.vpc_name", shape = "note"]
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] module.auto_scaling (close)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] module.cloudwatch (close)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] module.elb (close)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] module.flow_log (close)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] module.iam (close)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] module.internet_gateway (close)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] module.kms (close)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] module.launch_configuration (close)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] module.nat_gateway (close)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] module.route_table (close)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] module.security_group (close)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] module.subnet (close)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] module.vpc (close)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] output.auto_scaling_group_name (expand)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] output.auto_scaling_policy_arn (expand)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] output.cloudwatch_log_group_arn (expand)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] output.elb_target_group_arn (expand)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] output.elb_target_group_id (expand)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] output.flow_logs_cloudwatch_role (expand)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] output.internet_gateway_id (expand)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] output.kms_key_arn (expand)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] output.launch_configuration_name (expand)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] output.nat_gw_0_id (expand)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] output.nat_gw_1_id (expand)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] output.security_group_ec2_id (expand)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] output.security_group_elb_id (expand)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] output.subnet_private_0_id (expand)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] output.subnet_private_1_id (expand)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] output.subnet_private_2_id (expand)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] output.subnet_public_0_id (expand)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] output.subnet_public_1_id (expand)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] output.subnet_public_2_id (expand)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] output.vpc_id (expand)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] var.port_ssh"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] var.sg_description_002"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] var.sg_name_002"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] var.sts_duration"
		"[root] module.auto_scaling (close)" -> "[root] module.auto_scaling.output.auto_scaling_group_name (expand)"
		"[root] module.auto_scaling (close)" -> "[root] module.auto_scaling.output.auto_scaling_policy_arn (expand)"
		"[root] module.auto_scaling (close)" -> "[root] module.auto_scaling.var.elb_target_group_id (expand)"
		"[root] module.auto_scaling.aws_autoscaling_group.auto_scaling_group (expand)" -> "[root] module.auto_scaling.var.auto_scaling_group_force_delete (expand)"
		"[root] module.auto_scaling.aws_autoscaling_group.auto_scaling_group (expand)" -> "[root] module.auto_scaling.var.auto_scaling_group_health_check_grace (expand)"
		"[root] module.auto_scaling.aws_autoscaling_group.auto_scaling_group (expand)" -> "[root] module.auto_scaling.var.auto_scaling_group_health_check_type (expand)"
		"[root] module.auto_scaling.aws_autoscaling_group.auto_scaling_group (expand)" -> "[root] module.auto_scaling.var.auto_scaling_group_max_size (expand)"
		"[root] module.auto_scaling.aws_autoscaling_group.auto_scaling_group (expand)" -> "[root] module.auto_scaling.var.auto_scaling_group_min_size (expand)"
		"[root] module.auto_scaling.aws_autoscaling_group.auto_scaling_group (expand)" -> "[root] module.auto_scaling.var.auto_scaling_group_name (expand)"
		"[root] module.auto_scaling.aws_autoscaling_group.auto_scaling_group (expand)" -> "[root] module.auto_scaling.var.auto_scaling_group_termination_policies (expand)"
		"[root] module.auto_scaling.aws_autoscaling_group.auto_scaling_group (expand)" -> "[root] module.auto_scaling.var.elb_target_group_arn (expand)"
		"[root] module.auto_scaling.aws_autoscaling_group.auto_scaling_group (expand)" -> "[root] module.auto_scaling.var.launch_configuration_name (expand)"
		"[root] module.auto_scaling.aws_autoscaling_group.auto_scaling_group (expand)" -> "[root] module.auto_scaling.var.subnet_prv_0_id (expand)"
		"[root] module.auto_scaling.aws_autoscaling_group.auto_scaling_group (expand)" -> "[root] module.auto_scaling.var.subnet_prv_1_id (expand)"
		"[root] module.auto_scaling.aws_autoscaling_group.auto_scaling_group (expand)" -> "[root] module.auto_scaling.var.subnet_prv_2_id (expand)"
		"[root] module.auto_scaling.aws_autoscaling_policy.auto_scaling_policy (expand)" -> "[root] module.auto_scaling.aws_autoscaling_group.auto_scaling_group (expand)"
		"[root] module.auto_scaling.aws_autoscaling_policy.auto_scaling_policy (expand)" -> "[root] module.auto_scaling.var.auto_scaling_adjustment (expand)"
		"[root] module.auto_scaling.aws_autoscaling_policy.auto_scaling_policy (expand)" -> "[root] module.auto_scaling.var.auto_scaling_adjustment_type (expand)"
		"[root] module.auto_scaling.aws_autoscaling_policy.auto_scaling_policy (expand)" -> "[root] module.auto_scaling.var.auto_scaling_policy_name (expand)"
		"[root] module.auto_scaling.output.auto_scaling_group_name (expand)" -> "[root] module.auto_scaling.aws_autoscaling_group.auto_scaling_group (expand)"
		"[root] module.auto_scaling.output.auto_scaling_policy_arn (expand)" -> "[root] module.auto_scaling.aws_autoscaling_policy.auto_scaling_policy (expand)"
		"[root] module.auto_scaling.var.auto_scaling_adjustment (expand)" -> "[root] module.auto_scaling (expand)"
		"[root] module.auto_scaling.var.auto_scaling_adjustment (expand)" -> "[root] var.auto_scaling_adjustment"
		"[root] module.auto_scaling.var.auto_scaling_adjustment_type (expand)" -> "[root] module.auto_scaling (expand)"
		"[root] module.auto_scaling.var.auto_scaling_adjustment_type (expand)" -> "[root] var.auto_scaling_adjustment_type"
		"[root] module.auto_scaling.var.auto_scaling_group_force_delete (expand)" -> "[root] module.auto_scaling (expand)"
		"[root] module.auto_scaling.var.auto_scaling_group_force_delete (expand)" -> "[root] var.auto_scaling_group_force_delete"
		"[root] module.auto_scaling.var.auto_scaling_group_health_check_grace (expand)" -> "[root] module.auto_scaling (expand)"
		"[root] module.auto_scaling.var.auto_scaling_group_health_check_grace (expand)" -> "[root] var.auto_scaling_group_health_check_grace"
		"[root] module.auto_scaling.var.auto_scaling_group_health_check_type (expand)" -> "[root] module.auto_scaling (expand)"
		"[root] module.auto_scaling.var.auto_scaling_group_health_check_type (expand)" -> "[root] var.auto_scaling_group_health_check_type"
		"[root] module.auto_scaling.var.auto_scaling_group_max_size (expand)" -> "[root] module.auto_scaling (expand)"
		"[root] module.auto_scaling.var.auto_scaling_group_max_size (expand)" -> "[root] var.auto_scaling_group_max_size"
		"[root] module.auto_scaling.var.auto_scaling_group_min_size (expand)" -> "[root] module.auto_scaling (expand)"
		"[root] module.auto_scaling.var.auto_scaling_group_min_size (expand)" -> "[root] var.auto_scaling_group_min_size"
		"[root] module.auto_scaling.var.auto_scaling_group_name (expand)" -> "[root] module.auto_scaling (expand)"
		"[root] module.auto_scaling.var.auto_scaling_group_name (expand)" -> "[root] var.auto_scaling_group_name"
		"[root] module.auto_scaling.var.auto_scaling_group_termination_policies (expand)" -> "[root] module.auto_scaling (expand)"
		"[root] module.auto_scaling.var.auto_scaling_group_termination_policies (expand)" -> "[root] var.auto_scaling_group_termination_policies"
		"[root] module.auto_scaling.var.auto_scaling_policy_name (expand)" -> "[root] module.auto_scaling (expand)"
		"[root] module.auto_scaling.var.auto_scaling_policy_name (expand)" -> "[root] var.auto_scaling_policy_name"
		"[root] module.auto_scaling.var.elb_target_group_arn (expand)" -> "[root] module.auto_scaling (expand)"
		"[root] module.auto_scaling.var.elb_target_group_arn (expand)" -> "[root] module.elb.output.elb_target_group_arn (expand)"
		"[root] module.auto_scaling.var.elb_target_group_id (expand)" -> "[root] module.auto_scaling (expand)"
		"[root] module.auto_scaling.var.elb_target_group_id (expand)" -> "[root] module.elb.output.elb_target_group_id (expand)"
		"[root] module.auto_scaling.var.launch_configuration_name (expand)" -> "[root] module.auto_scaling (expand)"
		"[root] module.auto_scaling.var.launch_configuration_name (expand)" -> "[root] module.launch_configuration.output.launch_configuration_name (expand)"
		"[root] module.auto_scaling.var.subnet_prv_0_id (expand)" -> "[root] module.auto_scaling (expand)"
		"[root] module.auto_scaling.var.subnet_prv_0_id (expand)" -> "[root] module.subnet.output.subnet_private_0_id (expand)"
		"[root] module.auto_scaling.var.subnet_prv_1_id (expand)" -> "[root] module.auto_scaling (expand)"
		"[root] module.auto_scaling.var.subnet_prv_1_id (expand)" -> "[root] module.subnet.output.subnet_private_1_id (expand)"
		"[root] module.auto_scaling.var.subnet_prv_2_id (expand)" -> "[root] module.auto_scaling (expand)"
		"[root] module.auto_scaling.var.subnet_prv_2_id (expand)" -> "[root] module.subnet.output.subnet_private_2_id (expand)"
		"[root] module.cloudwatch (close)" -> "[root] module.cloudwatch.aws_cloudwatch_metric_alarm.auto_scaling_alarm (expand)"
		"[root] module.cloudwatch (close)" -> "[root] module.cloudwatch.output.cloudwatch_log_group_arn (expand)"
		"[root] module.cloudwatch.aws_cloudwatch_log_group.vpc_flow_logs (expand)" -> "[root] module.cloudwatch.var.cloudwatch_log_group_name (expand)"
		"[root] module.cloudwatch.aws_cloudwatch_log_group.vpc_flow_logs (expand)" -> "[root] module.cloudwatch.var.cloudwatch_log_group_retention (expand)"
		"[root] module.cloudwatch.aws_cloudwatch_log_group.vpc_flow_logs (expand)" -> "[root] module.cloudwatch.var.kms_key_id (expand)"
		"[root] module.cloudwatch.aws_cloudwatch_log_group.vpc_flow_logs (expand)" -> "[root] module.cloudwatch.var.standard_tags (expand)"
		"[root] module.cloudwatch.aws_cloudwatch_metric_alarm.auto_scaling_alarm (expand)" -> "[root] module.cloudwatch.var.auto_scaling_group_name (expand)"
		"[root] module.cloudwatch.aws_cloudwatch_metric_alarm.auto_scaling_alarm (expand)" -> "[root] module.cloudwatch.var.auto_scaling_policy_arn (expand)"
		"[root] module.cloudwatch.aws_cloudwatch_metric_alarm.auto_scaling_alarm (expand)" -> "[root] module.cloudwatch.var.cloudwatch_alarm_comparison (expand)"
		"[root] module.cloudwatch.aws_cloudwatch_metric_alarm.auto_scaling_alarm (expand)" -> "[root] module.cloudwatch.var.cloudwatch_alarm_name (expand)"
		"[root] module.cloudwatch.aws_cloudwatch_metric_alarm.auto_scaling_alarm (expand)" -> "[root] module.cloudwatch.var.cloudwatch_alarm_period (expand)"
		"[root] module.cloudwatch.aws_cloudwatch_metric_alarm.auto_scaling_alarm (expand)" -> "[root] module.cloudwatch.var.cloudwatch_alarm_statistic (expand)"
		"[root] module.cloudwatch.aws_cloudwatch_metric_alarm.auto_scaling_alarm (expand)" -> "[root] module.cloudwatch.var.cloudwatch_alarm_threshold (expand)"
		"[root] module.cloudwatch.aws_cloudwatch_metric_alarm.auto_scaling_alarm (expand)" -> "[root] module.cloudwatch.var.cloudwatch_evaluation_periods (expand)"
		"[root] module.cloudwatch.aws_cloudwatch_metric_alarm.auto_scaling_alarm (expand)" -> "[root] module.cloudwatch.var.cloudwatch_metric_name (expand)"
		"[root] module.cloudwatch.aws_cloudwatch_metric_alarm.auto_scaling_alarm (expand)" -> "[root] module.cloudwatch.var.cloudwatch_namespace (expand)"
		"[root] module.cloudwatch.output.cloudwatch_log_group_arn (expand)" -> "[root] module.cloudwatch.aws_cloudwatch_log_group.vpc_flow_logs (expand)"
		"[root] module.cloudwatch.var.auto_scaling_group_name (expand)" -> "[root] module.auto_scaling.output.auto_scaling_group_name (expand)"
		"[root] module.cloudwatch.var.auto_scaling_group_name (expand)" -> "[root] module.cloudwatch (expand)"
		"[root] module.cloudwatch.var.auto_scaling_policy_arn (expand)" -> "[root] module.auto_scaling.output.auto_scaling_policy_arn (expand)"
		"[root] module.cloudwatch.var.auto_scaling_policy_arn (expand)" -> "[root] module.cloudwatch (expand)"
		"[root] module.cloudwatch.var.cloudwatch_alarm_comparison (expand)" -> "[root] module.cloudwatch (expand)"
		"[root] module.cloudwatch.var.cloudwatch_alarm_comparison (expand)" -> "[root] var.cloudwatch_alarm_comparison"
		"[root] module.cloudwatch.var.cloudwatch_alarm_name (expand)" -> "[root] module.cloudwatch (expand)"
		"[root] module.cloudwatch.var.cloudwatch_alarm_name (expand)" -> "[root] var.cloudwatch_alarm_name"
		"[root] module.cloudwatch.var.cloudwatch_alarm_period (expand)" -> "[root] module.cloudwatch (expand)"
		"[root] module.cloudwatch.var.cloudwatch_alarm_period (expand)" -> "[root] var.cloudwatch_alarm_period"
		"[root] module.cloudwatch.var.cloudwatch_alarm_statistic (expand)" -> "[root] module.cloudwatch (expand)"
		"[root] module.cloudwatch.var.cloudwatch_alarm_statistic (expand)" -> "[root] var.cloudwatch_alarm_statistic"
		"[root] module.cloudwatch.var.cloudwatch_alarm_threshold (expand)" -> "[root] module.cloudwatch (expand)"
		"[root] module.cloudwatch.var.cloudwatch_alarm_threshold (expand)" -> "[root] var.cloudwatch_alarm_threshold"
		"[root] module.cloudwatch.var.cloudwatch_evaluation_periods (expand)" -> "[root] module.cloudwatch (expand)"
		"[root] module.cloudwatch.var.cloudwatch_evaluation_periods (expand)" -> "[root] var.cloudwatch_evaluation_periods"
		"[root] module.cloudwatch.var.cloudwatch_log_group_name (expand)" -> "[root] module.cloudwatch (expand)"
		"[root] module.cloudwatch.var.cloudwatch_log_group_name (expand)" -> "[root] var.cloudwatch_log_group_name"
		"[root] module.cloudwatch.var.cloudwatch_log_group_retention (expand)" -> "[root] module.cloudwatch (expand)"
		"[root] module.cloudwatch.var.cloudwatch_log_group_retention (expand)" -> "[root] var.cloudwatch_log_group_retention"
		"[root] module.cloudwatch.var.cloudwatch_metric_name (expand)" -> "[root] module.cloudwatch (expand)"
		"[root] module.cloudwatch.var.cloudwatch_metric_name (expand)" -> "[root] var.cloudwatch_metric_name"
		"[root] module.cloudwatch.var.cloudwatch_namespace (expand)" -> "[root] module.cloudwatch (expand)"
		"[root] module.cloudwatch.var.cloudwatch_namespace (expand)" -> "[root] var.cloudwatch_namespace"
		"[root] module.cloudwatch.var.kms_key_id (expand)" -> "[root] module.cloudwatch (expand)"
		"[root] module.cloudwatch.var.kms_key_id (expand)" -> "[root] module.kms.output.kms_key_arn (expand)"
		"[root] module.cloudwatch.var.standard_tags (expand)" -> "[root] module.cloudwatch (expand)"
		"[root] module.cloudwatch.var.standard_tags (expand)" -> "[root] var.standard_tags"
		"[root] module.elb (close)" -> "[root] module.elb.aws_lb_listener.elb-listener (expand)"
		"[root] module.elb (close)" -> "[root] module.elb.output.elb_target_group_arn (expand)"
		"[root] module.elb (close)" -> "[root] module.elb.output.elb_target_group_id (expand)"
		"[root] module.elb.aws_lb.web_elb (expand)" -> "[root] module.elb.var.elb_name (expand)"
		"[root] module.elb.aws_lb.web_elb (expand)" -> "[root] module.elb.var.elb_type (expand)"
		"[root] module.elb.aws_lb.web_elb (expand)" -> "[root] module.elb.var.enable_deletion_protection (expand)"
		"[root] module.elb.aws_lb.web_elb (expand)" -> "[root] module.elb.var.security_group_elb_id (expand)"
		"[root] module.elb.aws_lb.web_elb (expand)" -> "[root] module.elb.var.standard_tags (expand)"
		"[root] module.elb.aws_lb.web_elb (expand)" -> "[root] module.elb.var.subnet_pub_0_id (expand)"
		"[root] module.elb.aws_lb.web_elb (expand)" -> "[root] module.elb.var.subnet_pub_1_id (expand)"
		"[root] module.elb.aws_lb.web_elb (expand)" -> "[root] module.elb.var.subnet_pub_2_id (expand)"
		"[root] module.elb.aws_lb_listener.elb-listener (expand)" -> "[root] module.elb.aws_lb.web_elb (expand)"
		"[root] module.elb.aws_lb_listener.elb-listener (expand)" -> "[root] module.elb.aws_lb_target_group.target_group (expand)"
		"[root] module.elb.aws_lb_target_group.target_group (expand)" -> "[root] module.elb.var.elb_target_group_name (expand)"
		"[root] module.elb.aws_lb_target_group.target_group (expand)" -> "[root] module.elb.var.health_check_enabled (expand)"
		"[root] module.elb.aws_lb_target_group.target_group (expand)" -> "[root] module.elb.var.health_check_interval (expand)"
		"[root] module.elb.aws_lb_target_group.target_group (expand)" -> "[root] module.elb.var.health_check_matcher (expand)"
		"[root] module.elb.aws_lb_target_group.target_group (expand)" -> "[root] module.elb.var.health_check_path (expand)"
		"[root] module.elb.aws_lb_target_group.target_group (expand)" -> "[root] module.elb.var.health_check_port (expand)"
		"[root] module.elb.aws_lb_target_group.target_group (expand)" -> "[root] module.elb.var.health_check_protocol (expand)"
		"[root] module.elb.aws_lb_target_group.target_group (expand)" -> "[root] module.elb.var.health_check_timeout (expand)"
		"[root] module.elb.aws_lb_target_group.target_group (expand)" -> "[root] module.elb.var.http_protocol (expand)"
		"[root] module.elb.aws_lb_target_group.target_group (expand)" -> "[root] module.elb.var.port_http (expand)"
		"[root] module.elb.aws_lb_target_group.target_group (expand)" -> "[root] module.elb.var.standard_tags (expand)"
		"[root] module.elb.aws_lb_target_group.target_group (expand)" -> "[root] module.elb.var.vpc_id (expand)"
		"[root] module.elb.output.elb_target_group_arn (expand)" -> "[root] module.elb.aws_lb_target_group.target_group (expand)"
		"[root] module.elb.output.elb_target_group_id (expand)" -> "[root] module.elb.aws_lb_target_group.target_group (expand)"
		"[root] module.elb.var.elb_name (expand)" -> "[root] module.elb (expand)"
		"[root] module.elb.var.elb_name (expand)" -> "[root] var.elb_name"
		"[root] module.elb.var.elb_target_group_name (expand)" -> "[root] module.elb (expand)"
		"[root] module.elb.var.elb_target_group_name (expand)" -> "[root] var.elb_target_group_name"
		"[root] module.elb.var.elb_type (expand)" -> "[root] module.elb (expand)"
		"[root] module.elb.var.elb_type (expand)" -> "[root] var.elb_type"
		"[root] module.elb.var.enable_deletion_protection (expand)" -> "[root] module.elb (expand)"
		"[root] module.elb.var.enable_deletion_protection (expand)" -> "[root] var.enable_deletion_protection"
		"[root] module.elb.var.health_check_enabled (expand)" -> "[root] module.elb (expand)"
		"[root] module.elb.var.health_check_enabled (expand)" -> "[root] var.health_check_enabled"
		"[root] module.elb.var.health_check_interval (expand)" -> "[root] module.elb (expand)"
		"[root] module.elb.var.health_check_interval (expand)" -> "[root] var.health_check_interval"
		"[root] module.elb.var.health_check_matcher (expand)" -> "[root] module.elb (expand)"
		"[root] module.elb.var.health_check_matcher (expand)" -> "[root] var.health_check_matcher"
		"[root] module.elb.var.health_check_path (expand)" -> "[root] module.elb (expand)"
		"[root] module.elb.var.health_check_path (expand)" -> "[root] var.health_check_path"
		"[root] module.elb.var.health_check_port (expand)" -> "[root] module.elb (expand)"
		"[root] module.elb.var.health_check_port (expand)" -> "[root] var.health_check_port"
		"[root] module.elb.var.health_check_protocol (expand)" -> "[root] module.elb (expand)"
		"[root] module.elb.var.health_check_protocol (expand)" -> "[root] var.health_check_protocol"
		"[root] module.elb.var.health_check_timeout (expand)" -> "[root] module.elb (expand)"
		"[root] module.elb.var.health_check_timeout (expand)" -> "[root] var.health_check_timeout"
		"[root] module.elb.var.http_protocol (expand)" -> "[root] module.elb (expand)"
		"[root] module.elb.var.http_protocol (expand)" -> "[root] var.http_protocol"
		"[root] module.elb.var.port_http (expand)" -> "[root] module.elb (expand)"
		"[root] module.elb.var.port_http (expand)" -> "[root] var.port_http"
		"[root] module.elb.var.security_group_elb_id (expand)" -> "[root] module.elb (expand)"
		"[root] module.elb.var.security_group_elb_id (expand)" -> "[root] module.security_group.output.security_group_elb_id (expand)"
		"[root] module.elb.var.standard_tags (expand)" -> "[root] module.elb (expand)"
		"[root] module.elb.var.standard_tags (expand)" -> "[root] var.standard_tags"
		"[root] module.elb.var.subnet_pub_0_id (expand)" -> "[root] module.elb (expand)"
		"[root] module.elb.var.subnet_pub_0_id (expand)" -> "[root] module.subnet.output.subnet_public_0_id (expand)"
		"[root] module.elb.var.subnet_pub_1_id (expand)" -> "[root] module.elb (expand)"
		"[root] module.elb.var.subnet_pub_1_id (expand)" -> "[root] module.subnet.output.subnet_public_1_id (expand)"
		"[root] module.elb.var.subnet_pub_2_id (expand)" -> "[root] module.elb (expand)"
		"[root] module.elb.var.subnet_pub_2_id (expand)" -> "[root] module.subnet.output.subnet_public_2_id (expand)"
		"[root] module.elb.var.vpc_id (expand)" -> "[root] module.elb (expand)"
		"[root] module.elb.var.vpc_id (expand)" -> "[root] module.vpc.output.vpc_id (expand)"
		"[root] module.flow_log (close)" -> "[root] module.flow_log.aws_flow_log.main (expand)"
		"[root] module.flow_log.aws_flow_log.main (expand)" -> "[root] module.flow_log.var.cloudwatch_group_arn (expand)"
		"[root] module.flow_log.aws_flow_log.main (expand)" -> "[root] module.flow_log.var.flow_logs_cloudwatch_role (expand)"
		"[root] module.flow_log.aws_flow_log.main (expand)" -> "[root] module.flow_log.var.flow_logs_name (expand)"
		"[root] module.flow_log.aws_flow_log.main (expand)" -> "[root] module.flow_log.var.standard_tags (expand)"
		"[root] module.flow_log.aws_flow_log.main (expand)" -> "[root] module.flow_log.var.traffic_type (expand)"
		"[root] module.flow_log.aws_flow_log.main (expand)" -> "[root] module.flow_log.var.vpc_id (expand)"
		"[root] module.flow_log.var.cloudwatch_group_arn (expand)" -> "[root] module.cloudwatch.output.cloudwatch_log_group_arn (expand)"
		"[root] module.flow_log.var.cloudwatch_group_arn (expand)" -> "[root] module.flow_log (expand)"
		"[root] module.flow_log.var.flow_logs_cloudwatch_role (expand)" -> "[root] module.flow_log (expand)"
		"[root] module.flow_log.var.flow_logs_cloudwatch_role (expand)" -> "[root] module.iam.output.flow_logs_cloudwatch_role (expand)"
		"[root] module.flow_log.var.flow_logs_name (expand)" -> "[root] module.flow_log (expand)"
		"[root] module.flow_log.var.flow_logs_name (expand)" -> "[root] var.flow_logs_name"
		"[root] module.flow_log.var.standard_tags (expand)" -> "[root] module.flow_log (expand)"
		"[root] module.flow_log.var.standard_tags (expand)" -> "[root] var.standard_tags"
		"[root] module.flow_log.var.traffic_type (expand)" -> "[root] module.flow_log (expand)"
		"[root] module.flow_log.var.traffic_type (expand)" -> "[root] var.traffic_type"
		"[root] module.flow_log.var.vpc_id (expand)" -> "[root] module.flow_log (expand)"
		"[root] module.flow_log.var.vpc_id (expand)" -> "[root] module.vpc.output.vpc_id (expand)"
		"[root] module.iam (close)" -> "[root] module.iam.aws_iam_role_policy_attachment.flow_logs_assume (expand)"
		"[root] module.iam (close)" -> "[root] module.iam.output.flow_logs_cloudwatch_role (expand)"
		"[root] module.iam.aws_iam_policy.flow_logs_cloudwatch_policy (expand)" -> "[root] module.iam.var.iam_flow_logs_policy (expand)"
		"[root] module.iam.aws_iam_policy.flow_logs_cloudwatch_policy (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.iam.aws_iam_role.flow_logs_cloudwatch_role (expand)" -> "[root] module.iam.var.iam_flow_logs_assume_role (expand)"
		"[root] module.iam.aws_iam_role.flow_logs_cloudwatch_role (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.iam.aws_iam_role_policy_attachment.flow_logs_assume (expand)" -> "[root] module.iam.aws_iam_policy.flow_logs_cloudwatch_policy (expand)"
		"[root] module.iam.aws_iam_role_policy_attachment.flow_logs_assume (expand)" -> "[root] module.iam.aws_iam_role.flow_logs_cloudwatch_role (expand)"
		"[root] module.iam.output.flow_logs_cloudwatch_role (expand)" -> "[root] module.iam.aws_iam_role.flow_logs_cloudwatch_role (expand)"
		"[root] module.iam.var.iam_flow_logs_assume_role (expand)" -> "[root] module.iam (expand)"
		"[root] module.iam.var.iam_flow_logs_assume_role (expand)" -> "[root] var.iam_flow_logs_assume_role"
		"[root] module.iam.var.iam_flow_logs_policy (expand)" -> "[root] module.iam (expand)"
		"[root] module.iam.var.iam_flow_logs_policy (expand)" -> "[root] var.iam_flow_logs_policy"
		"[root] module.internet_gateway (close)" -> "[root] module.internet_gateway.output.internet_gateway_id (expand)"
		"[root] module.internet_gateway.aws_internet_gateway.internet_gateway (expand)" -> "[root] module.internet_gateway.var.internet_gateway_name (expand)"
		"[root] module.internet_gateway.aws_internet_gateway.internet_gateway (expand)" -> "[root] module.internet_gateway.var.standard_tags (expand)"
		"[root] module.internet_gateway.aws_internet_gateway.internet_gateway (expand)" -> "[root] module.internet_gateway.var.vpc_id (expand)"
		"[root] module.internet_gateway.output.internet_gateway_id (expand)" -> "[root] module.internet_gateway.aws_internet_gateway.internet_gateway (expand)"
		"[root] module.internet_gateway.var.internet_gateway_name (expand)" -> "[root] module.internet_gateway (expand)"
		"[root] module.internet_gateway.var.internet_gateway_name (expand)" -> "[root] var.internet_gateway_name"
		"[root] module.internet_gateway.var.standard_tags (expand)" -> "[root] module.internet_gateway (expand)"
		"[root] module.internet_gateway.var.standard_tags (expand)" -> "[root] var.standard_tags"
		"[root] module.internet_gateway.var.vpc_id (expand)" -> "[root] module.internet_gateway (expand)"
		"[root] module.internet_gateway.var.vpc_id (expand)" -> "[root] module.vpc.output.vpc_id (expand)"
		"[root] module.kms (close)" -> "[root] module.kms.output.account_id (expand)"
		"[root] module.kms (close)" -> "[root] module.kms.output.kms_key_arn (expand)"
		"[root] module.kms.aws_kms_key.cloudwatch_key (expand)" -> "[root] module.kms.data.aws_caller_identity.current (expand)"
		"[root] module.kms.aws_kms_key.cloudwatch_key (expand)" -> "[root] module.kms.var.aws_region_001 (expand)"
		"[root] module.kms.aws_kms_key.cloudwatch_key (expand)" -> "[root] module.kms.var.cloudwatch_log_group_name (expand)"
		"[root] module.kms.aws_kms_key.cloudwatch_key (expand)" -> "[root] module.kms.var.kms_deletion_window_in_days (expand)"
		"[root] module.kms.aws_kms_key.cloudwatch_key (expand)" -> "[root] module.kms.var.kms_description (expand)"
		"[root] module.kms.aws_kms_key.cloudwatch_key (expand)" -> "[root] module.kms.var.kms_enable_key_rotation (expand)"
		"[root] module.kms.aws_kms_key.cloudwatch_key (expand)" -> "[root] module.kms.var.standard_tags (expand)"
		"[root] module.kms.data.aws_caller_identity.current (expand)" -> "[root] module.kms (expand)"
		"[root] module.kms.data.aws_caller_identity.current (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.kms.output.account_id (expand)" -> "[root] module.kms.data.aws_caller_identity.current (expand)"
		"[root] module.kms.output.kms_key_arn (expand)" -> "[root] module.kms.aws_kms_key.cloudwatch_key (expand)"
		"[root] module.kms.var.aws_region_001 (expand)" -> "[root] module.kms (expand)"
		"[root] module.kms.var.aws_region_001 (expand)" -> "[root] var.aws_region_001"
		"[root] module.kms.var.cloudwatch_log_group_name (expand)" -> "[root] module.kms (expand)"
		"[root] module.kms.var.cloudwatch_log_group_name (expand)" -> "[root] var.cloudwatch_log_group_name"
		"[root] module.kms.var.kms_deletion_window_in_days (expand)" -> "[root] module.kms (expand)"
		"[root] module.kms.var.kms_deletion_window_in_days (expand)" -> "[root] var.kms_deletion_window_in_days"
		"[root] module.kms.var.kms_description (expand)" -> "[root] module.kms (expand)"
		"[root] module.kms.var.kms_description (expand)" -> "[root] var.kms_description"
		"[root] module.kms.var.kms_enable_key_rotation (expand)" -> "[root] module.kms (expand)"
		"[root] module.kms.var.kms_enable_key_rotation (expand)" -> "[root] var.kms_enable_key_rotation"
		"[root] module.kms.var.standard_tags (expand)" -> "[root] module.kms (expand)"
		"[root] module.kms.var.standard_tags (expand)" -> "[root] var.standard_tags"
		"[root] module.launch_configuration (close)" -> "[root] module.launch_configuration.output.launch_configuration_name (expand)"
		"[root] module.launch_configuration (close)" -> "[root] module.launch_configuration.var.launch_configuration_public_ip_address (expand)"
		"[root] module.launch_configuration.aws_launch_configuration.launch_configuration (expand)" -> "[root] module.launch_configuration.local.launch_configuration_user_data (expand)"
		"[root] module.launch_configuration.aws_launch_configuration.launch_configuration (expand)" -> "[root] module.launch_configuration.var.launch_configuration_image_id (expand)"
		"[root] module.launch_configuration.aws_launch_configuration.launch_configuration (expand)" -> "[root] module.launch_configuration.var.launch_configuration_instance_type (expand)"
		"[root] module.launch_configuration.aws_launch_configuration.launch_configuration (expand)" -> "[root] module.launch_configuration.var.launch_configuration_key_name (expand)"
		"[root] module.launch_configuration.aws_launch_configuration.launch_configuration (expand)" -> "[root] module.launch_configuration.var.launch_configuration_monitoring (expand)"
		"[root] module.launch_configuration.aws_launch_configuration.launch_configuration (expand)" -> "[root] module.launch_configuration.var.launch_configuration_name (expand)"
		"[root] module.launch_configuration.aws_launch_configuration.launch_configuration (expand)" -> "[root] module.launch_configuration.var.security_group_ec2_id (expand)"
		"[root] module.launch_configuration.local.launch_configuration_user_data (expand)" -> "[root] module.launch_configuration (expand)"
		"[root] module.launch_configuration.output.launch_configuration_name (expand)" -> "[root] module.launch_configuration.aws_launch_configuration.launch_configuration (expand)"
		"[root] module.launch_configuration.var.launch_configuration_image_id (expand)" -> "[root] module.launch_configuration (expand)"
		"[root] module.launch_configuration.var.launch_configuration_image_id (expand)" -> "[root] var.launch_configuration_image_id"
		"[root] module.launch_configuration.var.launch_configuration_instance_type (expand)" -> "[root] module.launch_configuration (expand)"
		"[root] module.launch_configuration.var.launch_configuration_instance_type (expand)" -> "[root] var.launch_configuration_instance_type"
		"[root] module.launch_configuration.var.launch_configuration_key_name (expand)" -> "[root] module.launch_configuration (expand)"
		"[root] module.launch_configuration.var.launch_configuration_key_name (expand)" -> "[root] var.launch_configuration_key_name"
		"[root] module.launch_configuration.var.launch_configuration_monitoring (expand)" -> "[root] module.launch_configuration (expand)"
		"[root] module.launch_configuration.var.launch_configuration_monitoring (expand)" -> "[root] var.launch_configuration_monitoring"
		"[root] module.launch_configuration.var.launch_configuration_name (expand)" -> "[root] module.launch_configuration (expand)"
		"[root] module.launch_configuration.var.launch_configuration_name (expand)" -> "[root] var.launch_configuration_name"
		"[root] module.launch_configuration.var.launch_configuration_public_ip_address (expand)" -> "[root] module.launch_configuration (expand)"
		"[root] module.launch_configuration.var.launch_configuration_public_ip_address (expand)" -> "[root] var.launch_configuration_public_ip_address"
		"[root] module.launch_configuration.var.security_group_ec2_id (expand)" -> "[root] module.launch_configuration (expand)"
		"[root] module.launch_configuration.var.security_group_ec2_id (expand)" -> "[root] module.security_group.output.security_group_ec2_id (expand)"
		"[root] module.nat_gateway (close)" -> "[root] module.nat_gateway.output.nat_gw_0_id (expand)"
		"[root] module.nat_gateway (close)" -> "[root] module.nat_gateway.output.nat_gw_1_id (expand)"
		"[root] module.nat_gateway.aws_eip.nat_gw_eip_0 (expand)" -> "[root] module.nat_gateway.var.vpc_enabled (expand)"
		"[root] module.nat_gateway.aws_eip.nat_gw_eip_0 (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.nat_gateway.aws_eip.nat_gw_eip_1 (expand)" -> "[root] module.nat_gateway.var.vpc_enabled (expand)"
		"[root] module.nat_gateway.aws_eip.nat_gw_eip_1 (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.nat_gateway.aws_nat_gateway.nat_gw_0 (expand)" -> "[root] module.nat_gateway.aws_eip.nat_gw_eip_0 (expand)"
		"[root] module.nat_gateway.aws_nat_gateway.nat_gw_0 (expand)" -> "[root] module.nat_gateway.var.nat_gw_name_000 (expand)"
		"[root] module.nat_gateway.aws_nat_gateway.nat_gw_0 (expand)" -> "[root] module.nat_gateway.var.standard_tags (expand)"
		"[root] module.nat_gateway.aws_nat_gateway.nat_gw_0 (expand)" -> "[root] module.nat_gateway.var.subnet_pub_0_id (expand)"
		"[root] module.nat_gateway.aws_nat_gateway.nat_gw_1 (expand)" -> "[root] module.nat_gateway.aws_eip.nat_gw_eip_1 (expand)"
		"[root] module.nat_gateway.aws_nat_gateway.nat_gw_1 (expand)" -> "[root] module.nat_gateway.var.nat_gw_name_001 (expand)"
		"[root] module.nat_gateway.aws_nat_gateway.nat_gw_1 (expand)" -> "[root] module.nat_gateway.var.standard_tags (expand)"
		"[root] module.nat_gateway.aws_nat_gateway.nat_gw_1 (expand)" -> "[root] module.nat_gateway.var.subnet_pub_1_id (expand)"
		"[root] module.nat_gateway.output.nat_gw_0_id (expand)" -> "[root] module.nat_gateway.aws_nat_gateway.nat_gw_0 (expand)"
		"[root] module.nat_gateway.output.nat_gw_1_id (expand)" -> "[root] module.nat_gateway.aws_nat_gateway.nat_gw_1 (expand)"
		"[root] module.nat_gateway.var.nat_gw_name_000 (expand)" -> "[root] module.nat_gateway (expand)"
		"[root] module.nat_gateway.var.nat_gw_name_000 (expand)" -> "[root] var.nat_gw_name_000"
		"[root] module.nat_gateway.var.nat_gw_name_001 (expand)" -> "[root] module.nat_gateway (expand)"
		"[root] module.nat_gateway.var.nat_gw_name_001 (expand)" -> "[root] var.nat_gw_name_001"
		"[root] module.nat_gateway.var.standard_tags (expand)" -> "[root] module.nat_gateway (expand)"
		"[root] module.nat_gateway.var.standard_tags (expand)" -> "[root] var.standard_tags"
		"[root] module.nat_gateway.var.subnet_pub_0_id (expand)" -> "[root] module.nat_gateway (expand)"
		"[root] module.nat_gateway.var.subnet_pub_0_id (expand)" -> "[root] module.subnet.output.subnet_public_0_id (expand)"
		"[root] module.nat_gateway.var.subnet_pub_1_id (expand)" -> "[root] module.nat_gateway (expand)"
		"[root] module.nat_gateway.var.subnet_pub_1_id (expand)" -> "[root] module.subnet.output.subnet_public_1_id (expand)"
		"[root] module.nat_gateway.var.vpc_enabled (expand)" -> "[root] module.nat_gateway (expand)"
		"[root] module.nat_gateway.var.vpc_enabled (expand)" -> "[root] var.vpc_enabled"
		"[root] module.route_table (close)" -> "[root] module.route_table.aws_route_table_association.internet_gateway_rta_0 (expand)"
		"[root] module.route_table (close)" -> "[root] module.route_table.aws_route_table_association.internet_gateway_rta_1 (expand)"
		"[root] module.route_table (close)" -> "[root] module.route_table.aws_route_table_association.internet_gateway_rta_2 (expand)"
		"[root] module.route_table (close)" -> "[root] module.route_table.aws_route_table_association.nat-gateway-pub-0 (expand)"
		"[root] module.route_table (close)" -> "[root] module.route_table.aws_route_table_association.nat-gateway-pub-1 (expand)"
		"[root] module.route_table (close)" -> "[root] module.route_table.aws_route_table_association.nat-gateway-pub-2 (expand)"
		"[root] module.route_table.aws_route_table.internet_gateway_rt_0 (expand)" -> "[root] module.route_table.var.internet_cidr (expand)"
		"[root] module.route_table.aws_route_table.internet_gateway_rt_0 (expand)" -> "[root] module.route_table.var.internet_gateway_id (expand)"
		"[root] module.route_table.aws_route_table.internet_gateway_rt_0 (expand)" -> "[root] module.route_table.var.vpc_id (expand)"
		"[root] module.route_table.aws_route_table.nat_gateway_rt_0 (expand)" -> "[root] module.route_table.var.internet_cidr (expand)"
		"[root] module.route_table.aws_route_table.nat_gateway_rt_0 (expand)" -> "[root] module.route_table.var.nat_gw_0_id (expand)"
		"[root] module.route_table.aws_route_table.nat_gateway_rt_0 (expand)" -> "[root] module.route_table.var.vpc_id (expand)"
		"[root] module.route_table.aws_route_table.nat_gateway_rt_1 (expand)" -> "[root] module.route_table.var.internet_cidr (expand)"
		"[root] module.route_table.aws_route_table.nat_gateway_rt_1 (expand)" -> "[root] module.route_table.var.nat_gw_1_id (expand)"
		"[root] module.route_table.aws_route_table.nat_gateway_rt_1 (expand)" -> "[root] module.route_table.var.vpc_id (expand)"
		"[root] module.route_table.aws_route_table_association.internet_gateway_rta_0 (expand)" -> "[root] module.route_table.aws_route_table.internet_gateway_rt_0 (expand)"
		"[root] module.route_table.aws_route_table_association.internet_gateway_rta_0 (expand)" -> "[root] module.route_table.var.subnet_pub_0_id (expand)"
		"[root] module.route_table.aws_route_table_association.internet_gateway_rta_1 (expand)" -> "[root] module.route_table.aws_route_table.internet_gateway_rt_0 (expand)"
		"[root] module.route_table.aws_route_table_association.internet_gateway_rta_1 (expand)" -> "[root] module.route_table.var.subnet_pub_1_id (expand)"
		"[root] module.route_table.aws_route_table_association.internet_gateway_rta_2 (expand)" -> "[root] module.route_table.aws_route_table.internet_gateway_rt_0 (expand)"
		"[root] module.route_table.aws_route_table_association.internet_gateway_rta_2 (expand)" -> "[root] module.route_table.var.subnet_pub_2_id (expand)"
		"[root] module.route_table.aws_route_table_association.nat-gateway-pub-0 (expand)" -> "[root] module.route_table.aws_route_table.nat_gateway_rt_0 (expand)"
		"[root] module.route_table.aws_route_table_association.nat-gateway-pub-0 (expand)" -> "[root] module.route_table.var.subnet_prv_0_id (expand)"
		"[root] module.route_table.aws_route_table_association.nat-gateway-pub-1 (expand)" -> "[root] module.route_table.aws_route_table.nat_gateway_rt_0 (expand)"
		"[root] module.route_table.aws_route_table_association.nat-gateway-pub-1 (expand)" -> "[root] module.route_table.var.subnet_prv_1_id (expand)"
		"[root] module.route_table.aws_route_table_association.nat-gateway-pub-2 (expand)" -> "[root] module.route_table.aws_route_table.nat_gateway_rt_1 (expand)"
		"[root] module.route_table.aws_route_table_association.nat-gateway-pub-2 (expand)" -> "[root] module.route_table.var.subnet_prv_2_id (expand)"
		"[root] module.route_table.var.internet_cidr (expand)" -> "[root] module.route_table (expand)"
		"[root] module.route_table.var.internet_cidr (expand)" -> "[root] var.internet_cidr"
		"[root] module.route_table.var.internet_gateway_id (expand)" -> "[root] module.internet_gateway.output.internet_gateway_id (expand)"
		"[root] module.route_table.var.internet_gateway_id (expand)" -> "[root] module.route_table (expand)"
		"[root] module.route_table.var.nat_gw_0_id (expand)" -> "[root] module.nat_gateway.output.nat_gw_0_id (expand)"
		"[root] module.route_table.var.nat_gw_0_id (expand)" -> "[root] module.route_table (expand)"
		"[root] module.route_table.var.nat_gw_1_id (expand)" -> "[root] module.nat_gateway.output.nat_gw_1_id (expand)"
		"[root] module.route_table.var.nat_gw_1_id (expand)" -> "[root] module.route_table (expand)"
		"[root] module.route_table.var.subnet_prv_0_id (expand)" -> "[root] module.route_table (expand)"
		"[root] module.route_table.var.subnet_prv_0_id (expand)" -> "[root] module.subnet.output.subnet_private_0_id (expand)"
		"[root] module.route_table.var.subnet_prv_1_id (expand)" -> "[root] module.route_table (expand)"
		"[root] module.route_table.var.subnet_prv_1_id (expand)" -> "[root] module.subnet.output.subnet_private_1_id (expand)"
		"[root] module.route_table.var.subnet_prv_2_id (expand)" -> "[root] module.route_table (expand)"
		"[root] module.route_table.var.subnet_prv_2_id (expand)" -> "[root] module.subnet.output.subnet_private_2_id (expand)"
		"[root] module.route_table.var.subnet_pub_0_id (expand)" -> "[root] module.route_table (expand)"
		"[root] module.route_table.var.subnet_pub_0_id (expand)" -> "[root] module.subnet.output.subnet_public_0_id (expand)"
		"[root] module.route_table.var.subnet_pub_1_id (expand)" -> "[root] module.route_table (expand)"
		"[root] module.route_table.var.subnet_pub_1_id (expand)" -> "[root] module.subnet.output.subnet_public_1_id (expand)"
		"[root] module.route_table.var.subnet_pub_2_id (expand)" -> "[root] module.route_table (expand)"
		"[root] module.route_table.var.subnet_pub_2_id (expand)" -> "[root] module.subnet.output.subnet_public_2_id (expand)"
		"[root] module.route_table.var.vpc_id (expand)" -> "[root] module.route_table (expand)"
		"[root] module.route_table.var.vpc_id (expand)" -> "[root] module.vpc.output.vpc_id (expand)"
		"[root] module.security_group (close)" -> "[root] module.security_group.aws_security_group_rule.ec2-https-egress (expand)"
		"[root] module.security_group (close)" -> "[root] module.security_group.output.security_group_ec2_id (expand)"
		"[root] module.security_group (close)" -> "[root] module.security_group.output.security_group_elb_id (expand)"
		"[root] module.security_group (close)" -> "[root] module.security_group.var.sg_ingress (expand)"
		"[root] module.security_group.aws_security_group.ec2 (expand)" -> "[root] module.security_group.var.internet_cidr (expand)"
		"[root] module.security_group.aws_security_group.ec2 (expand)" -> "[root] module.security_group.var.port_http (expand)"
		"[root] module.security_group.aws_security_group.ec2 (expand)" -> "[root] module.security_group.var.sg_description_001 (expand)"
		"[root] module.security_group.aws_security_group.ec2 (expand)" -> "[root] module.security_group.var.sg_name_001 (expand)"
		"[root] module.security_group.aws_security_group.ec2 (expand)" -> "[root] module.security_group.var.standard_tags (expand)"
		"[root] module.security_group.aws_security_group.ec2 (expand)" -> "[root] module.security_group.var.subnet_pub_0_cidr (expand)"
		"[root] module.security_group.aws_security_group.ec2 (expand)" -> "[root] module.security_group.var.subnet_pub_1_cidr (expand)"
		"[root] module.security_group.aws_security_group.ec2 (expand)" -> "[root] module.security_group.var.subnet_pub_2_cidr (expand)"
		"[root] module.security_group.aws_security_group.ec2 (expand)" -> "[root] module.security_group.var.tcp_protocol (expand)"
		"[root] module.security_group.aws_security_group.ec2 (expand)" -> "[root] module.security_group.var.vpc_id (expand)"
		"[root] module.security_group.aws_security_group.elb (expand)" -> "[root] module.security_group.var.internet_cidr (expand)"
		"[root] module.security_group.aws_security_group.elb (expand)" -> "[root] module.security_group.var.port_http (expand)"
		"[root] module.security_group.aws_security_group.elb (expand)" -> "[root] module.security_group.var.sg_description_000 (expand)"
		"[root] module.security_group.aws_security_group.elb (expand)" -> "[root] module.security_group.var.sg_name_000 (expand)"
		"[root] module.security_group.aws_security_group.elb (expand)" -> "[root] module.security_group.var.standard_tags (expand)"
		"[root] module.security_group.aws_security_group.elb (expand)" -> "[root] module.security_group.var.subnet_prv_0_cidr (expand)"
		"[root] module.security_group.aws_security_group.elb (expand)" -> "[root] module.security_group.var.subnet_prv_1_cidr (expand)"
		"[root] module.security_group.aws_security_group.elb (expand)" -> "[root] module.security_group.var.subnet_prv_2_cidr (expand)"
		"[root] module.security_group.aws_security_group.elb (expand)" -> "[root] module.security_group.var.tcp_protocol (expand)"
		"[root] module.security_group.aws_security_group.elb (expand)" -> "[root] module.security_group.var.vpc_id (expand)"
		"[root] module.security_group.aws_security_group_rule.ec2-https-egress (expand)" -> "[root] module.security_group.aws_security_group.ec2 (expand)"
		"[root] module.security_group.aws_security_group_rule.ec2-https-egress (expand)" -> "[root] module.security_group.var.port_https (expand)"
		"[root] module.security_group.aws_security_group_rule.ec2-https-egress (expand)" -> "[root] module.security_group.var.sg_egress (expand)"
		"[root] module.security_group.output.security_group_ec2_id (expand)" -> "[root] module.security_group.aws_security_group.ec2 (expand)"
		"[root] module.security_group.output.security_group_elb_id (expand)" -> "[root] module.security_group.aws_security_group.elb (expand)"
		"[root] module.security_group.var.internet_cidr (expand)" -> "[root] module.security_group (expand)"
		"[root] module.security_group.var.internet_cidr (expand)" -> "[root] var.internet_cidr"
		"[root] module.security_group.var.port_http (expand)" -> "[root] module.security_group (expand)"
		"[root] module.security_group.var.port_http (expand)" -> "[root] var.port_http"
		"[root] module.security_group.var.port_https (expand)" -> "[root] module.security_group (expand)"
		"[root] module.security_group.var.port_https (expand)" -> "[root] var.port_https"
		"[root] module.security_group.var.sg_description_000 (expand)" -> "[root] module.security_group (expand)"
		"[root] module.security_group.var.sg_description_000 (expand)" -> "[root] var.sg_description_000"
		"[root] module.security_group.var.sg_description_001 (expand)" -> "[root] module.security_group (expand)"
		"[root] module.security_group.var.sg_description_001 (expand)" -> "[root] var.sg_description_001"
		"[root] module.security_group.var.sg_egress (expand)" -> "[root] module.security_group (expand)"
		"[root] module.security_group.var.sg_egress (expand)" -> "[root] var.sg_egress"
		"[root] module.security_group.var.sg_ingress (expand)" -> "[root] module.security_group (expand)"
		"[root] module.security_group.var.sg_ingress (expand)" -> "[root] var.sg_ingress"
		"[root] module.security_group.var.sg_name_000 (expand)" -> "[root] module.security_group (expand)"
		"[root] module.security_group.var.sg_name_000 (expand)" -> "[root] var.sg_name_000"
		"[root] module.security_group.var.sg_name_001 (expand)" -> "[root] module.security_group (expand)"
		"[root] module.security_group.var.sg_name_001 (expand)" -> "[root] var.sg_name_001"
		"[root] module.security_group.var.standard_tags (expand)" -> "[root] module.security_group (expand)"
		"[root] module.security_group.var.standard_tags (expand)" -> "[root] var.standard_tags"
		"[root] module.security_group.var.subnet_prv_0_cidr (expand)" -> "[root] module.security_group (expand)"
		"[root] module.security_group.var.subnet_prv_0_cidr (expand)" -> "[root] var.subnet_prv_0_cidr"
		"[root] module.security_group.var.subnet_prv_1_cidr (expand)" -> "[root] module.security_group (expand)"
		"[root] module.security_group.var.subnet_prv_1_cidr (expand)" -> "[root] var.subnet_prv_1_cidr"
		"[root] module.security_group.var.subnet_prv_2_cidr (expand)" -> "[root] module.security_group (expand)"
		"[root] module.security_group.var.subnet_prv_2_cidr (expand)" -> "[root] var.subnet_prv_2_cidr"
		"[root] module.security_group.var.subnet_pub_0_cidr (expand)" -> "[root] module.security_group (expand)"
		"[root] module.security_group.var.subnet_pub_0_cidr (expand)" -> "[root] var.subnet_pub_0_cidr"
		"[root] module.security_group.var.subnet_pub_1_cidr (expand)" -> "[root] module.security_group (expand)"
		"[root] module.security_group.var.subnet_pub_1_cidr (expand)" -> "[root] var.subnet_pub_1_cidr"
		"[root] module.security_group.var.subnet_pub_2_cidr (expand)" -> "[root] module.security_group (expand)"
		"[root] module.security_group.var.subnet_pub_2_cidr (expand)" -> "[root] var.subnet_pub_2_cidr"
		"[root] module.security_group.var.tcp_protocol (expand)" -> "[root] module.security_group (expand)"
		"[root] module.security_group.var.tcp_protocol (expand)" -> "[root] var.tcp_protocol"
		"[root] module.security_group.var.vpc_id (expand)" -> "[root] module.security_group (expand)"
		"[root] module.security_group.var.vpc_id (expand)" -> "[root] module.vpc.output.vpc_id (expand)"
		"[root] module.subnet (close)" -> "[root] module.subnet.output.subnet_private_0_id (expand)"
		"[root] module.subnet (close)" -> "[root] module.subnet.output.subnet_private_1_id (expand)"
		"[root] module.subnet (close)" -> "[root] module.subnet.output.subnet_private_2_id (expand)"
		"[root] module.subnet (close)" -> "[root] module.subnet.output.subnet_public_0_id (expand)"
		"[root] module.subnet (close)" -> "[root] module.subnet.output.subnet_public_1_id (expand)"
		"[root] module.subnet (close)" -> "[root] module.subnet.output.subnet_public_2_id (expand)"
		"[root] module.subnet (close)" -> "[root] module.subnet.var.subnet_prv_2_name (expand)"
		"[root] module.subnet.aws_subnet.private_0 (expand)" -> "[root] module.subnet.var.map_public_ip_on_launch (expand)"
		"[root] module.subnet.aws_subnet.private_0 (expand)" -> "[root] module.subnet.var.standard_tags (expand)"
		"[root] module.subnet.aws_subnet.private_0 (expand)" -> "[root] module.subnet.var.subnet_prv_0_az (expand)"
		"[root] module.subnet.aws_subnet.private_0 (expand)" -> "[root] module.subnet.var.subnet_prv_0_cidr (expand)"
		"[root] module.subnet.aws_subnet.private_0 (expand)" -> "[root] module.subnet.var.subnet_prv_0_name (expand)"
		"[root] module.subnet.aws_subnet.private_0 (expand)" -> "[root] module.subnet.var.vpc_id (expand)"
		"[root] module.subnet.aws_subnet.private_1 (expand)" -> "[root] module.subnet.var.map_public_ip_on_launch (expand)"
		"[root] module.subnet.aws_subnet.private_1 (expand)" -> "[root] module.subnet.var.standard_tags (expand)"
		"[root] module.subnet.aws_subnet.private_1 (expand)" -> "[root] module.subnet.var.subnet_prv_1_az (expand)"
		"[root] module.subnet.aws_subnet.private_1 (expand)" -> "[root] module.subnet.var.subnet_prv_1_cidr (expand)"
		"[root] module.subnet.aws_subnet.private_1 (expand)" -> "[root] module.subnet.var.subnet_prv_1_name (expand)"
		"[root] module.subnet.aws_subnet.private_1 (expand)" -> "[root] module.subnet.var.vpc_id (expand)"
		"[root] module.subnet.aws_subnet.private_2 (expand)" -> "[root] module.subnet.var.map_public_ip_on_launch (expand)"
		"[root] module.subnet.aws_subnet.private_2 (expand)" -> "[root] module.subnet.var.standard_tags (expand)"
		"[root] module.subnet.aws_subnet.private_2 (expand)" -> "[root] module.subnet.var.subnet_prv_1_name (expand)"
		"[root] module.subnet.aws_subnet.private_2 (expand)" -> "[root] module.subnet.var.subnet_prv_2_az (expand)"
		"[root] module.subnet.aws_subnet.private_2 (expand)" -> "[root] module.subnet.var.subnet_prv_2_cidr (expand)"
		"[root] module.subnet.aws_subnet.private_2 (expand)" -> "[root] module.subnet.var.vpc_id (expand)"
		"[root] module.subnet.aws_subnet.public_0 (expand)" -> "[root] module.subnet.var.map_public_ip_on_launch (expand)"
		"[root] module.subnet.aws_subnet.public_0 (expand)" -> "[root] module.subnet.var.standard_tags (expand)"
		"[root] module.subnet.aws_subnet.public_0 (expand)" -> "[root] module.subnet.var.subnet_pub_0_az (expand)"
		"[root] module.subnet.aws_subnet.public_0 (expand)" -> "[root] module.subnet.var.subnet_pub_0_cidr (expand)"
		"[root] module.subnet.aws_subnet.public_0 (expand)" -> "[root] module.subnet.var.subnet_pub_0_name (expand)"
		"[root] module.subnet.aws_subnet.public_0 (expand)" -> "[root] module.subnet.var.vpc_id (expand)"
		"[root] module.subnet.aws_subnet.public_1 (expand)" -> "[root] module.subnet.var.map_public_ip_on_launch (expand)"
		"[root] module.subnet.aws_subnet.public_1 (expand)" -> "[root] module.subnet.var.standard_tags (expand)"
		"[root] module.subnet.aws_subnet.public_1 (expand)" -> "[root] module.subnet.var.subnet_pub_1_az (expand)"
		"[root] module.subnet.aws_subnet.public_1 (expand)" -> "[root] module.subnet.var.subnet_pub_1_cidr (expand)"
		"[root] module.subnet.aws_subnet.public_1 (expand)" -> "[root] module.subnet.var.subnet_pub_1_name (expand)"
		"[root] module.subnet.aws_subnet.public_1 (expand)" -> "[root] module.subnet.var.vpc_id (expand)"
		"[root] module.subnet.aws_subnet.public_2 (expand)" -> "[root] module.subnet.var.map_public_ip_on_launch (expand)"
		"[root] module.subnet.aws_subnet.public_2 (expand)" -> "[root] module.subnet.var.standard_tags (expand)"
		"[root] module.subnet.aws_subnet.public_2 (expand)" -> "[root] module.subnet.var.subnet_pub_2_az (expand)"
		"[root] module.subnet.aws_subnet.public_2 (expand)" -> "[root] module.subnet.var.subnet_pub_2_cidr (expand)"
		"[root] module.subnet.aws_subnet.public_2 (expand)" -> "[root] module.subnet.var.subnet_pub_2_name (expand)"
		"[root] module.subnet.aws_subnet.public_2 (expand)" -> "[root] module.subnet.var.vpc_id (expand)"
		"[root] module.subnet.output.subnet_private_0_id (expand)" -> "[root] module.subnet.aws_subnet.private_0 (expand)"
		"[root] module.subnet.output.subnet_private_1_id (expand)" -> "[root] module.subnet.aws_subnet.private_1 (expand)"
		"[root] module.subnet.output.subnet_private_2_id (expand)" -> "[root] module.subnet.aws_subnet.private_2 (expand)"
		"[root] module.subnet.output.subnet_public_0_id (expand)" -> "[root] module.subnet.aws_subnet.public_0 (expand)"
		"[root] module.subnet.output.subnet_public_1_id (expand)" -> "[root] module.subnet.aws_subnet.public_1 (expand)"
		"[root] module.subnet.output.subnet_public_2_id (expand)" -> "[root] module.subnet.aws_subnet.public_2 (expand)"
		"[root] module.subnet.var.map_public_ip_on_launch (expand)" -> "[root] module.subnet (expand)"
		"[root] module.subnet.var.map_public_ip_on_launch (expand)" -> "[root] var.map_public_ip_on_launch"
		"[root] module.subnet.var.standard_tags (expand)" -> "[root] module.subnet (expand)"
		"[root] module.subnet.var.standard_tags (expand)" -> "[root] var.standard_tags"
		"[root] module.subnet.var.subnet_prv_0_az (expand)" -> "[root] module.subnet (expand)"
		"[root] module.subnet.var.subnet_prv_0_az (expand)" -> "[root] var.subnet_prv_0_az"
		"[root] module.subnet.var.subnet_prv_0_cidr (expand)" -> "[root] module.subnet (expand)"
		"[root] module.subnet.var.subnet_prv_0_cidr (expand)" -> "[root] var.subnet_prv_0_cidr"
		"[root] module.subnet.var.subnet_prv_0_name (expand)" -> "[root] module.subnet (expand)"
		"[root] module.subnet.var.subnet_prv_0_name (expand)" -> "[root] var.subnet_prv_0_name"
		"[root] module.subnet.var.subnet_prv_1_az (expand)" -> "[root] module.subnet (expand)"
		"[root] module.subnet.var.subnet_prv_1_az (expand)" -> "[root] var.subnet_prv_1_az"
		"[root] module.subnet.var.subnet_prv_1_cidr (expand)" -> "[root] module.subnet (expand)"
		"[root] module.subnet.var.subnet_prv_1_cidr (expand)" -> "[root] var.subnet_prv_1_cidr"
		"[root] module.subnet.var.subnet_prv_1_name (expand)" -> "[root] module.subnet (expand)"
		"[root] module.subnet.var.subnet_prv_1_name (expand)" -> "[root] var.subnet_prv_1_name"
		"[root] module.subnet.var.subnet_prv_2_az (expand)" -> "[root] module.subnet (expand)"
		"[root] module.subnet.var.subnet_prv_2_az (expand)" -> "[root] var.subnet_prv_2_az"
		"[root] module.subnet.var.subnet_prv_2_cidr (expand)" -> "[root] module.subnet (expand)"
		"[root] module.subnet.var.subnet_prv_2_cidr (expand)" -> "[root] var.subnet_prv_2_cidr"
		"[root] module.subnet.var.subnet_prv_2_name (expand)" -> "[root] module.subnet (expand)"
		"[root] module.subnet.var.subnet_prv_2_name (expand)" -> "[root] var.subnet_prv_2_name"
		"[root] module.subnet.var.subnet_pub_0_az (expand)" -> "[root] module.subnet (expand)"
		"[root] module.subnet.var.subnet_pub_0_az (expand)" -> "[root] var.subnet_pub_0_az"
		"[root] module.subnet.var.subnet_pub_0_cidr (expand)" -> "[root] module.subnet (expand)"
		"[root] module.subnet.var.subnet_pub_0_cidr (expand)" -> "[root] var.subnet_pub_0_cidr"
		"[root] module.subnet.var.subnet_pub_0_name (expand)" -> "[root] module.subnet (expand)"
		"[root] module.subnet.var.subnet_pub_0_name (expand)" -> "[root] var.subnet_pub_0_name"
		"[root] module.subnet.var.subnet_pub_1_az (expand)" -> "[root] module.subnet (expand)"
		"[root] module.subnet.var.subnet_pub_1_az (expand)" -> "[root] var.subnet_pub_1_az"
		"[root] module.subnet.var.subnet_pub_1_cidr (expand)" -> "[root] module.subnet (expand)"
		"[root] module.subnet.var.subnet_pub_1_cidr (expand)" -> "[root] var.subnet_pub_1_cidr"
		"[root] module.subnet.var.subnet_pub_1_name (expand)" -> "[root] module.subnet (expand)"
		"[root] module.subnet.var.subnet_pub_1_name (expand)" -> "[root] var.subnet_pub_1_name"
		"[root] module.subnet.var.subnet_pub_2_az (expand)" -> "[root] module.subnet (expand)"
		"[root] module.subnet.var.subnet_pub_2_az (expand)" -> "[root] var.subnet_pub_2_az"
		"[root] module.subnet.var.subnet_pub_2_cidr (expand)" -> "[root] module.subnet (expand)"
		"[root] module.subnet.var.subnet_pub_2_cidr (expand)" -> "[root] var.subnet_pub_2_cidr"
		"[root] module.subnet.var.subnet_pub_2_name (expand)" -> "[root] module.subnet (expand)"
		"[root] module.subnet.var.subnet_pub_2_name (expand)" -> "[root] var.subnet_pub_2_name"
		"[root] module.subnet.var.vpc_id (expand)" -> "[root] module.subnet (expand)"
		"[root] module.subnet.var.vpc_id (expand)" -> "[root] module.vpc.output.vpc_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_id (expand)"
		"[root] module.vpc.aws_vpc.vpc (expand)" -> "[root] module.vpc.var.enable_dns_hostnames (expand)"
		"[root] module.vpc.aws_vpc.vpc (expand)" -> "[root] module.vpc.var.enable_dns_support (expand)"
		"[root] module.vpc.aws_vpc.vpc (expand)" -> "[root] module.vpc.var.standard_tags (expand)"
		"[root] module.vpc.aws_vpc.vpc (expand)" -> "[root] module.vpc.var.vpc_cidr (expand)"
		"[root] module.vpc.aws_vpc.vpc (expand)" -> "[root] module.vpc.var.vpc_name (expand)"
		"[root] module.vpc.aws_vpc.vpc (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.vpc.output.vpc_id (expand)" -> "[root] module.vpc.aws_vpc.vpc (expand)"
		"[root] module.vpc.var.enable_dns_hostnames (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.enable_dns_hostnames (expand)" -> "[root] var.enable_dns_hostnames"
		"[root] module.vpc.var.enable_dns_support (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.enable_dns_support (expand)" -> "[root] var.enable_dns_support"
		"[root] module.vpc.var.standard_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.standard_tags (expand)" -> "[root] var.standard_tags"
		"[root] module.vpc.var.vpc_cidr (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.vpc_cidr (expand)" -> "[root] var.vpc_cidr"
		"[root] module.vpc.var.vpc_name (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.vpc_name (expand)" -> "[root] var.vpc_name"
		"[root] output.auto_scaling_group_name (expand)" -> "[root] module.auto_scaling.output.auto_scaling_group_name (expand)"
		"[root] output.auto_scaling_policy_arn (expand)" -> "[root] module.auto_scaling.output.auto_scaling_policy_arn (expand)"
		"[root] output.cloudwatch_log_group_arn (expand)" -> "[root] module.cloudwatch.output.cloudwatch_log_group_arn (expand)"
		"[root] output.elb_target_group_arn (expand)" -> "[root] module.elb.output.elb_target_group_arn (expand)"
		"[root] output.elb_target_group_id (expand)" -> "[root] module.elb.output.elb_target_group_id (expand)"
		"[root] output.flow_logs_cloudwatch_role (expand)" -> "[root] module.iam.output.flow_logs_cloudwatch_role (expand)"
		"[root] output.internet_gateway_id (expand)" -> "[root] module.internet_gateway.output.internet_gateway_id (expand)"
		"[root] output.kms_key_arn (expand)" -> "[root] module.kms.output.kms_key_arn (expand)"
		"[root] output.launch_configuration_name (expand)" -> "[root] module.launch_configuration.output.launch_configuration_name (expand)"
		"[root] output.nat_gw_0_id (expand)" -> "[root] module.nat_gateway.output.nat_gw_0_id (expand)"
		"[root] output.nat_gw_1_id (expand)" -> "[root] module.nat_gateway.output.nat_gw_1_id (expand)"
		"[root] output.security_group_ec2_id (expand)" -> "[root] module.security_group.output.security_group_ec2_id (expand)"
		"[root] output.security_group_elb_id (expand)" -> "[root] module.security_group.output.security_group_elb_id (expand)"
		"[root] output.subnet_private_0_id (expand)" -> "[root] module.subnet.output.subnet_private_0_id (expand)"
		"[root] output.subnet_private_1_id (expand)" -> "[root] module.subnet.output.subnet_private_1_id (expand)"
		"[root] output.subnet_private_2_id (expand)" -> "[root] module.subnet.output.subnet_private_2_id (expand)"
		"[root] output.subnet_public_0_id (expand)" -> "[root] module.subnet.output.subnet_public_0_id (expand)"
		"[root] output.subnet_public_1_id (expand)" -> "[root] module.subnet.output.subnet_public_1_id (expand)"
		"[root] output.subnet_public_2_id (expand)" -> "[root] module.subnet.output.subnet_public_2_id (expand)"
		"[root] output.vpc_id (expand)" -> "[root] module.vpc.output.vpc_id (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.cloudwatch.aws_cloudwatch_metric_alarm.auto_scaling_alarm (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.elb.aws_lb_listener.elb-listener (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.flow_log.aws_flow_log.main (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.iam.aws_iam_role_policy_attachment.flow_logs_assume (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.route_table.aws_route_table_association.internet_gateway_rta_0 (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.route_table.aws_route_table_association.internet_gateway_rta_1 (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.route_table.aws_route_table_association.internet_gateway_rta_2 (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.route_table.aws_route_table_association.nat-gateway-pub-0 (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.route_table.aws_route_table_association.nat-gateway-pub-1 (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.route_table.aws_route_table_association.nat-gateway-pub-2 (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.security_group.aws_security_group_rule.ec2-https-egress (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"]" -> "[root] var.aws_region_001"
		"[root] root" -> "[root] meta.count-boundary (EachMode fixup)"
		"[root] root" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)"
	}
}

