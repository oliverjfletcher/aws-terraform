name: "Continuous Deployment"

on:
  pull_request:
    branches:
      - main
  
jobs:
  terraform:
    name: "Continuous Deployment"
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}    
      TERRAFORM_CLI_PATH: "./env/web-application/main/"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: dev

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check -recursive
        working-directory: "./env/web-application/"

      - name: Terraform Init
        id: init
        run: |
          git config --global url."https://oauth2:${{ secrets.GITHUB_TOKEN }}@github.com".insteadOf ssh://git@github.com
          terraform init
        working-directory: "./env/web-application/main/"

      - name: tfsec Scan & Comment
        uses: tfsec/tfsec-pr-commenter-action@v1.0.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}       
          soft_fail_commenter: true  

      - name: driftctl Scan
        id: driftctl
        uses: oliverjfletcher/driftctl-action-testing@v1.2.1
        continue-on-error: true
        env:
          DCTL_FROM: tfstate+s3://useds3b000/global/s3/terraform.tfstate
          AWS_DEFAULT_REGION: us-west-2

      - name: driftctl Scan Comment
        uses: actions/github-script@v5.1.0
        if: github.event_name == 'pull_request'
        env:
          DFCTL_SCAN: "#### driftctl Scan üîé ${{ steps.driftctl.outputs.driftctl }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### driftctl Scan üîé\`${{ steps.driftctl.outcome }}\`
            <details><summary>Show Scan</summary>
            \n
            ${process.env.DFCTL_SCAN}
            \n
            </details>`;
              github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
     
      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan -var-file="dev.tfvars" -out "tfplan.binary" -no-color
        working-directory: "./env/web-application/main/"
        continue-on-error: true
      
      - name: Terraform Plan Comment
        uses: actions/github-script@v5.1.0
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            <details><summary>Show Plan</summary>
            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`
            </details>`;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Show
        if: github.event_name == 'pull_request'
        run: terraform show -json "tfplan.binary" > "plan.json"
        working-directory: "./env/web-application/main/"

      - name: Setup Infracost
        if: github.event_name == 'pull_request'
        uses: infracost/actions/setup@v1
        with:
          api-key: ${{ secrets.INFRACOST_API_KEY }}

      - name: Generate Infracost JSON
        if: github.event_name == 'pull_request'
        run: infracost breakdown --path plan.json --format json --out-file /tmp/infracost.json
        working-directory: "./env/web-application/main/"

      - name: Post Infracost Comment
        if: github.event_name == 'pull_request'
        uses: infracost/actions/comment@v1
        with:
          path: /tmp/infracost.json
          behavior: update 

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        working-directory: "./env/web-application/main/"
        run: terraform destroy -var-file="dev.tfvars" -auto-approve

